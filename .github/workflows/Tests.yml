# --------------------------------------------------------------------------------
# This workflow was automatically generated by Action Status 1.0 (194).
# (see https://actionstatus.elegantchaos.com for more details)
# --------------------------------------------------------------------------------

name: Tests

on: [push, pull_request]

jobs:

    update-linuxmain:
        name: Update Linux Main
        runs-on: macOS-latest
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Install Nightly 5.2 Toolchain
          run: |
            branch="swift-5.2-branch"
            wget --quiet https://swift.org/builds/$branch/xcode/latest-build.yml
            grep "download:" < latest-build.yml > filtered.yml
            sed -e 's/-osx.pkg//g' filtered.yml > stripped.yml
            sed -e 's/:[^:\/\/]/YML="/g;s/$/"/g;s/ *=/=/g' stripped.yml > snapshot.sh
            source snapshot.sh
            echo "Installing Toolchain: $downloadYML"
            wget --quiet https://swift.org/builds/$branch/xcode/$downloadYML/$downloadYML-osx.pkg
            sudo installer -pkg $downloadYML-osx.pkg -target /
            ln -s "/Library/Developer/Toolchains/$downloadYML.xctoolchain/usr/bin" swift-latest
            export PATH="swift-latest:$PATH"
            swift --version
        - name: Update
          run: export PATH="swift-latest:$PATH"; swift test --generate-linuxmain
        - name: Commit Changes
          continue-on-error: true
          run: |
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git commit -m "Updated Linux Main" -a
        - name: Push changes
          continue-on-error: true
          uses: ad-m/github-push-action@master
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}

    
    linux-52:
        name: Linux (Swift 5.2 Nightly)
        needs: update-linuxmain
        runs-on: ubuntu-latest
        container: swiftlang/swift:nightly-5.2
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Swift Version
          run: swift --version
        - name: Make Logs Directory
          run: mkdir logs
        - name: Build (Debug)
          run: swift build -v -c debug
        - name: Build (Release)
          run: swift build -v -c release
        - name: Test (Debug)
          run: swift test -v -c debug 
        - name: Test (Release)
          run: swift test -v -c release -Xswiftc -enable-testing

    
    linux-n:
        name: Linux (Swift Nightly)
        needs: update-linuxmain
        runs-on: ubuntu-latest
        container: swiftlang/swift:nightly
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Swift Version
          run: swift --version
        - name: Make Logs Directory
          run: mkdir logs
        - name: Build (Debug)
          run: swift build -v -c debug
        - name: Build (Release)
          run: swift build -v -c release
        - name: Test (Debug)
          run: swift test -v -c debug 
        - name: Test (Release)
          run: swift test -v -c release -Xswiftc -enable-testing

    
    macOS:
        name: macOS
        runs-on: macOS-latest
        steps:
        - name: Checkout
          uses: actions/checkout@v1
        - name: Swift Version
          run: swift --version
        - name: Make Logs Directory
          run: mkdir logs
        - name: Build (Debug)
          run: swift build -v -c debug
        - name: Build (Release)
          run: swift build -v -c release
        - name: Test (Debug)
          run: swift test -v -c debug 
        - name: Test (Release)
          run: swift test -v -c release -Xswiftc -enable-testing

